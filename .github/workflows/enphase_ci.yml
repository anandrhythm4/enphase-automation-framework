name: Enphase Automation CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html requests pyyaml

      # Step 4: Run tests and generate report
      - name: Run pytest and generate report
        run: |
          # Ensure directories exist
          mkdir -p reports logs
          
          # Run pytest with HTML report and log file
          pytest --html=reports/reports.html --self-contained-html --log-file=logs/test_logs.log

      # Step 5: Upload test artifacts (report + log)
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            reports/reports.html
            logs/test_logs.log
            
      # Step 6: Comment test results on PR
      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let commentBody = '';

            if (fs.existsSync('logs/test_logs.log')) {
              const logs = fs.readFileSync('logs/test_logs.log', 'utf8');
              const passed = logs.includes('failed') ? false : true;

              commentBody = passed
                ? '✅ All tests passed!'
                : '❌ Some tests failed. Check the logs for details.';

              commentBody += '\n\n[HTML Report](./reports/reports.html)';
            } else {
              commentBody = '⚠️ Test log not found.';
            }

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: commentBody
            });
